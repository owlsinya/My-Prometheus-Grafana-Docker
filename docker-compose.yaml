version: '3.8'
services:
  nginx:
    build: ./nginx/
    container_name: nginx
    ports:
      - 8080:8080
    networks:
      - monitoring

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:0.10
    container_name: nginx-prometheus-exporter
    command: -nginx.scrape-uri http://nginx:8080/stub_status
    ports:
      - 9113:9113
    depends_on:
      - nginx
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    # network_mode: host
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'        
      - '--web.enable-lifecycle'                  
      - '--web.enable-admin-api'    
    extra_hosts:
      - "host.docker.internal:host-gateway"      
    ports:
      - '9090:9090'
    networks:
      - monitoring

  renderer:
    image: grafana/grafana-image-renderer:3.4.2
    environment:
      BROWSER_TZ: Asia/Taipei
    ports:
      - '8081:8081'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:9.0.0
    container_name: grafana
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: pass
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3200/
      GF_LOG_FILTERS: rendering:debug
      GF_SERVER_HTTP_PORT: 3200  # 讓 Grafana 內部監聽 3200
    depends_on:
      - prometheus
      - renderer
    ports:
      - '3200:3200'
    depends_on:
      - prometheus
    networks:
      - monitoring

  # node-exporter:
  #     image: prom/node-exporter:v1.6.1
  #     container_name: node-exporter
  #     restart: unless-stopped
  #     ports:
  #       - "9100:9100"

networks:
  monitoring:
    driver: bridge